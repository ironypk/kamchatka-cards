{"version":3,"sources":["n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.css","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.css","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/test/Test.tsx","n1-main/m2-bll/reducers/loginReducer.ts","n1-main/m2-bll/reducers/registrationReducer.ts","n1-main/m2-bll/reducers/profileReducer.ts","n1-main/m2-bll/reducers/recoverPasswordReducer.ts","n1-main/m2-bll/reducers/createPasswordReducer.ts","n1-main/m2-bll/store.ts","n1-main/m1-ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","PATH","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","value","key","SuperButton","red","label","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","Test","Routes","path","exact","render","LOGIN","REGISTRATION","PROFILE","RECOVER_PASSWORD","CREATE_PASSWORD","TEST","PAGE_NOT_FOUND","to","initialState","rootReducer","combineReducers","login","state","registration","profile","recoverPassword","createPassword","store","createStore","applyMiddleware","thunkMiddleWare","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe0ab467.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3CH4s\",\"errorInput\":\"SuperInputText_errorInput__Uo6DN\",\"error\":\"SuperInputText_error__3oHA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3yYFy\",\"red\":\"SuperButton_red__REsUg\",\"mui-button\":\"SuperButton_mui-button__2Ayd5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__r-iD4\",\"spanClassName\":\"SuperCheckbox_spanClassName__13mkh\"};","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {Test} from '../test/Test';\r\n\r\nexport enum PATH {\r\n    LOGIN = '/login',\r\n    REGISTRATION = '/registration',\r\n    PROFILE = '/profile',\r\n    PAGE_NOT_FOUND = '/404',\r\n    RECOVER_PASSWORD = '/recover_password',\r\n    CREATE_PASSWORD = '/create_password',\r\n    TEST = '/test'\r\n\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <div>MAIN</div>}/>\r\n                <Route path={PATH.LOGIN} render={() => <div>Login</div>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <div>REGISTRATION</div>}/>\r\n                <Route path={PATH.PROFILE} render={() => <div>PROFILE</div>}/>\r\n                <Route path={PATH.RECOVER_PASSWORD} render={() => <div>RECOVER_PASSWORD</div>}/>\r\n                <Route path={PATH.CREATE_PASSWORD} render={() => <div>CREATE_PASSWORD</div>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n\r\n                <Route path={PATH.PAGE_NOT_FOUND} render={() => <div>page not found</div>}/>\r\n                <Route path={'*'} render={() => <Redirect to={PATH.PAGE_NOT_FOUND}/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\n\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className ? className : ''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    label:string\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,label, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{label}</button>\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from 'react'\r\nimport SuperInputText from '../common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../common/c2-SuperButton/SuperButton';\r\nimport SuperCheckbox from '../common/c3-SuperCheckbox/SuperCheckbox';\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <>\r\n            <SuperInputText/>\r\n            <SuperButton label='button'/>\r\n            <SuperCheckbox/>\r\n        </>\r\n    )\r\n}","const initialState = {}\r\n\r\nexport const loginReducer = (state = initialState, action:any) => {\r\n    return state\r\n}","const initialState = {}\r\n\r\nexport const registrationReducer = (state = initialState, action:any) => {\r\n    return state\r\n}","const initialState = {}\r\n\r\nexport const profileReducer = (state = initialState, action:any) => {\r\n    return state\r\n}","const initialState = {}\r\n\r\nexport const recoverPasswordReducer = (state = initialState, action:any) => {\r\n    return state\r\n}","const initialState = {}\r\n\r\nexport const createPasswordReducer = (state = initialState, action:any) => {\r\n    return state\r\n}","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport {loginReducer} from './reducers/loginReducer';\r\nimport {registrationReducer} from './reducers/registrationReducer';\r\nimport {profileReducer} from './reducers/profileReducer';\r\nimport {recoverPasswordReducer} from './reducers/recoverPasswordReducer';\r\nimport {createPasswordReducer} from './reducers/createPasswordReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    login : loginReducer,\r\n    registration : registrationReducer,\r\n    profile : profileReducer,\r\n    recoverPassword : recoverPasswordReducer,\r\n    createPassword: createPasswordReducer\r\n})\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleWare))\r\n\r\nexport default store","import React from 'react';\nimport './App.css';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport Routes from './routes/Routes';\nimport store from '../m2-bll/store';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Provider store={store}>\n                    <Routes/>\n                </Provider>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}